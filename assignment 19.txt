/*   #1.Write a program to find the number of vowels in each of the 5 strings stored in two
       dimensional arrays, taken from the user.   */
#include<stdio.h>
check(char ch)
{
    char ar[15]={'a','e','i','o','u','A','E','I','O','U'};
    for(int i=0;ar[i]!='\0';i++)
    {
        if(ch==ar[i])
        return 1;
    }
    return 0;
}
main()
{
    char str[5][100];
    int i,j,count=0;
    for(i=0;i<5;i++){
        printf("Enter %d string : ",i+1);
        fgets(str[i],100,stdin);}
    for(i=0;i<5;i++)
     {
         for(j=0;str[i][j];j++)
         {
             if(check(str[i][j]))
                count++;
         }
     }
     if(count>1)
        printf("---%d Vowels---",count);
     else
        printf("---%d Vowel---",count);
}








/*   2. Write a program to sort 10 city names stored in two dimensional arrays, taken from the user   */
#include<stdio.h>
#include<string.h>
int main()
{
    char str[10][20];
    int i,j;
    for(i=0;i<10;i++){
        printf("Enter %2d string of city name : ",i+1);
        fgets(str[i],20,stdin);}
    for(i=0;i<10;i++)
     {
         for(j=0;j<10;j++)
         {
            if(strcmp(str[i],str[j])!=1)
            {
                char temp[20];
                strcpy(temp,str[i]);
                strcpy(str[i],str[j]);
                strcpy(str[j],temp);
            }
         }
     }
     printf("--------------\n");
     for(i=0;i<10;i++)
        printf("%s",str[i]);
    printf("--------------");
     return 0;
}









3. Write a program to read and display a 2D array of strings in C language.














/*   4. Write a program to search a string in the list of strings.   */
#include<stdio.h>
#include<string.h>
int main()
{
    int f=0;
    char surch[20];
    char a[10][20]={"raj","vikash","akash","astha","neeraj","rammu","jyoti","kavya","ayush","piyush"};
    printf("Enter name : ");
    gets(surch);
    for(int i=0;i<10;i++)
    {
        if(strcmp(surch,a[i])==0)
            f++;
    }
    if(f>0)
        printf("\nYes,your string is found ");
    else
        printf("\nOops sorry ,Not found ");

    return 0;
}









/*   5. Suppose we have a list of email addresses, check whether all email addresses have
        ‘@’ in it. Print the odd email out.   */
#include<stdio.h>
check(char array[],char ch)
{
    for(int i=0;array[i];i++)
    {
        if(ch==array[i])
            return 1;
    }
    return 0;
}
int main()
{
     char a[5][30]={"rajkumar@gmail.com","ak9616gmail.com","MySirG@gmail.com","210501gmail.com","codeblocks@gmail.com"};
     int i ,surch=64;
     for(i=0;i<5;i++)
     {
         if(check(a[i],surch))
         {
             printf("%s > Valid \n",a[i]);
         }
         else
            printf("%s > Invalid \n",a[i]);
     }

     return 0;
}









/*   #6. Write a program to print the strings which are palindrome in the list of strings.   */
#include<stdio.h>

int main()
{
     char rvs[10],hold[10];
     char a[5][10]={"madam","racecar","raj kumar","level","civic"};
     for(int i=0;i<5;i++)
     {
         strcpy(hold,a[i]);
         strcpy(rvs,strrev(hold));
         if(strcmp(rvs,a[i])==0)
         {
             printf("%s > Plindrom string \n",a[i]);
         }
         else
            printf("%s > Not a Plindrom string \n",a[i]);

     }

     return 0;
}









//  #7.1. From the list of IP addresses, check whether all ip addresses are valid.

#include<stdio.h>
int main()
{
    int a[5][4];
    for(int i=0;i<5;i++)
    {
        printf("Enter %d IP Add : ",i+1);
        scanf("%d.%d.%d.%d",&a[i][0],&a[i][1],&a[i][2],&a[i][3]);
    }
    printf("\n-------------------------\n");
    for(int i=0;i<5;i++)
    {
        if(a[i][0]>=0&&a[i][0]<=255 &&a[i][1]>=0&&a[i][1]<=255 && a[i][2]>=0&&a[i][2]<=255&&a[i][3]>=0&&a[i][3]<=255 )
            {
                printf("\n%d.%d.%d.%d - Velid",a[i][0],a[i][1],a[i][2],a[i][3]);
            }
        else
            printf("\n%d.%d.%d.%d - InVelid",a[i][0],a[i][1],a[i][2],a[i][3]);
    }
    printf("\n-------------------------\n");

    return 0;
}










/*  #7.2. From the list of IP addresses, check whether all ip addresses are valid.    */
#include<string.h>
#include<stdio.h>
#include<stdlib.h>
int check(char[]);
int check(char a[])
{
    int i=0,c=0;
    while(a[i]!='\0')
    {
        if(a[i]=='.')
            c++;
        i++;
    }
    if(c==3)
        return 1;
    else
        return 0;
}
int main()
{
    int a,b,c,d  ;
    char *x;
    char ip[5][20];
    char ip2[5][20];
    for(int i=0;i<5;i++)
    {
        printf("Enter %d ip address :",i+1);
        gets(ip[i]);
        strcpy(ip2[i],ip[i]);
    }
    for(int i=0;i<5;i++)
    {
        x=strtok(ip[i],".");
        a=atoi(x);
        x=strtok(NULL,".");
        b=atoi(x);
        x=strtok(NULL,".");
        c=atoi(x);
        x=strtok(NULL,"\0");
        d=atoi(x);

        if(a>=0&&a<=255&&c>=0&&b<=255&&c>=0&&c<=255&&d>=0&&d<=255&& check(ip2[i]))
            printf("\n%15s   Valid",ip2[i]);
        else
            printf("%\n%15s   InValid",ip2[i]);
    }
return 0;
}













/*  #9.Write a program that asks the user to enter a username. If the username entered is
       one of the names in the list then the user is allowed to calculate the factorial of a
       number. Otherwise, an error message is displayed
*/
#include<stdio.h>
void fectorial()
{
    int i,n,count=1 ;
    printf("\nEnter any number for calculat fectorial : ");
    scanf("%d",&n);
    for(i=1;i<=n;i++)
        count=count*i;
    printf("\nFectorial is = %d",count);
}

int main()
{
     int fleg=0;
     char username[20];
     char username_data[][20]={"rajkumar1234","astha1234","mysirg@1234"};
     printf("Enter username [");
     gets(username);
     for(int i=0;i<3;i++)
     {
         if(strcmp(username,username_data[i])==0)
         {
             fleg++;
             printf("\nPermition Granted");
             printf("\nYou can calculat fectorial\n");
             fectorial();
         }
     }
     if(fleg==0)
          printf("\nWrong username ");
     return 0;
}














/*  #10. Create an authentication system. It should be menu driven  */
#include<stdio.h>
int main()
{
     int pin=1234  , user_pin;
     printf("Enter pin : ");
     scanf("%d",&user_pin);
     if(user_pin==pin)
     {
         int n,n1,n2;
         printf("\n------Unlock------");
         printf("\npress 1. to sum");
         printf("\npress 2. to multiplication");
         printf("\npress 3. to subtraction\n");
         scanf("%d",&n);
         switch(n)
         {
             case 1:printf("\nEnter two number for sum :");
                    scanf("%d %d",&n1,&n2);
                    printf("Result is %d",n1+n2);
                    break;

             case 2:printf("\nEnter two number for multiplication :");
                    scanf("%d %d",&n1,&n2);
                    printf("Result is %d",n1*n2);
                    break;

             case 3:printf("\nEnter two number for subtraction :");
                    scanf("%d %d",&n1,&n2);
                    printf("Result is %d",n1-n2);
                    break;
            default :printf("Sorry ,Invalid option \n");
         }
     }
     else
        printf("---Wrong pin---\nPelese Enter correct pin &\nTry again ");
     return 0;
}


